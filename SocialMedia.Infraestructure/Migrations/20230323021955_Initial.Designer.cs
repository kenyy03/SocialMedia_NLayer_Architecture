// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMedia.Infraestructure.Data;

#nullable disable

namespace SocialMedia.Infraestructure.Migrations
{
    [DbContext(typeof(SocialMediaContext))]
    [Migration("20230323021955_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SocialMedia.Core.Entities.CommentEntity.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<bool>("Active")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Description");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.PostEntity.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Image");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.UserEntity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Active")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LastNames");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Names");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.CommentEntity.Comment", b =>
                {
                    b.HasOne("SocialMedia.Core.Entities.PostEntity.Post", "IdPostNavigation")
                        .WithMany("Comment")
                        .HasForeignKey("PostId")
                        .IsRequired();

                    b.HasOne("SocialMedia.Core.Entities.UserEntity.User", "IdUserNavigation")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("IdPostNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.PostEntity.Post", b =>
                {
                    b.HasOne("SocialMedia.Core.Entities.UserEntity.User", "IdUserNavigation")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.PostEntity.Post", b =>
                {
                    b.Navigation("Comment");
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.UserEntity.User", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
